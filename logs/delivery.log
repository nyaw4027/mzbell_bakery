import logging
from .models import DeliveryZone, DeliveryPerson, Delivery
from orders.models import Order
from django.utils import timezone

# Get logger instance
logger = logging.getLogger('delivery')

def assign_delivery_person_to_order(order):
    latitude = order.latitude
    longitude = order.longitude

    logger.info(f"Assigning delivery for order {order.id} at location ({latitude}, {longitude})")

    # 1. Find delivery zone for the address
    matching_zone = None
    for zone in DeliveryZone.objects.filter(is_active=True):
        if zone.is_location_in_zone(latitude, longitude):
            matching_zone = zone
            break

    if not matching_zone:
        logger.warning(f"No matching delivery zone found for location ({latitude}, {longitude})")
        return None

    # 2. Get available delivery persons in this zone
    available_persons = matching_zone.delivery_persons.filter(status='available', is_active=True)

    if not available_persons.exists():
        logger.warning(f"No available delivery persons in zone: {matching_zone.name}")
        return None

    # 3. Assign the first available person
    delivery_person = available_persons.first()
    delivery_person.status = 'busy'
    delivery_person.save()

    # 4. Create delivery object
    delivery = Delivery.objects.create(
        order=order,
        delivery_person=delivery_person,
        status='assigned',
        estimated_arrival=timezone.now() + timezone.timedelta(minutes=matching_zone.estimated_delivery_time)
    )

    logger.info(f"Delivery assigned to {delivery_person.user.get_full_name()} for order {order.id}")

    return delivery
